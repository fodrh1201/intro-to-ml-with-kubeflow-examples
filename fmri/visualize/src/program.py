import nibabel

import nibabel as nib
import numpy as np
import sys
import os

imgPath = "/home/rawkintrevo/gits/kubeflow/off-label-kf/4dfmri.data.nii.gz"
img = nib.load(imgPath)
data = img.get_fdata()
data.shape

vol_shape = data.shape[:-1]
n_voxels = np.prod(vol_shape)
voxel_by_time = data.reshape(n_voxels, data.shape[-1])

np.savetxt(sys.argv[2], voxel_by_time, delimiter=",")

print(f"Dimensions of S: {voxel_by_time.shape}")

#### so you load something output by dsvd
#### we'll load ts from output of dsvdT. each line will be a t (they'll be much longer)

t = (2, {
    0: 0.021785533418998308,
    1: -0.1119160489573493,
    2: 0.05112591386037015,
    3: -0.02258338059608741,
    4: 0.03640696464650122,
    5: 0.00401518958726362,
    6: 0.010262739029314717,
    7: 0.07373827399085747,
    8: 0.14730293910149952,
    9: 0.07846704027498821,
    10: 0.07500470081203074,
    11: -0.021038083547150754,
    12: -0.13921172922349062,
    13: 0.042787444794655655,
    14: -0.03984618745421216,
    15: 0.12232404297539982,
    16: 0.07354727760152893,
    17: 0.08625710598584133,
    18: 0.11107625986132286,
    19: -0.03255946809333798,
    20: 0.0810871446739152,
    21: -0.1285957119446053,
    22: -0.05848172005538124,
    23: -0.036024006771984855,
    24: -0.19386462394905174,
    25: -0.03669096884418419,
    26: -0.16080364512321396,
    27: -0.02530698371821656,
    28: 0.10771654817012873,
    29: -0.05217397966069554,
    30: -0.054345889903466955,
    31: -0.14133155341489248,
    32: 0.007433214217378791,
    33: 0.1096670362568106,
    34: 0.11942837685352371,
    35: 0.23557937584001432,
    36: 0.07255973869762591,
    37: 0.10565499247627115,
    38: 0.17575116165846144,
    39: 0.025137818754813825,
    40: 0.12511872324182235,
    41: -0.007654058238703285,
    42: -0.09615936635593701,
    43: -0.1388042230003556,
    44: -0.07990199361807541,
    45: 0.012221351017004257,
    46: -0.16091633718845566,
    47: -0.1491512182061086,
    48: -0.02636858325757303,
    49: -0.15021548333364645,
    50: -0.15238864707223995,
    51: -0.19766586998071425,
    52: -0.10318172842205248,
    53: 0.07263684133876652,
    54: -0.07418655420167257,
    55: 0.162628627385611,
    56: 0.07208413430519006,
    57: -0.019187397414756113,
    58: 0.10414795011616515,
    59: 0.04169989160530298,
    60: 0.15907022053905834,
    61: 0.055137580501188874,
    62: -0.02070597967504248,
    63: 0.03541298200873358,
    64: -0.09415828701186478,
    65: -0.019329342848970508,
    66: -0.007847130350543676,
    67: 0.0878651343148781,
    68: -0.04199171443839289,
    69: -0.14612607571013714,
    70: -0.06959495437022536,
    71: -0.1821846529862641,
    72: -0.20829999907526348,
    73: -0.018500693290247807,
    74: -0.1060103437680306,
    75: -0.005131385493638851,
    76: -0.06077745771188877,
    77: 0.03641430231010356,
    78: 0.15741182890835453,
    79: -0.00851365200067798,
    80: 0.25822042305450277,
    81: 0.1328606196142085,
    82: 0.05753803686678817,
    83: 0.18833983235507962,
    84: -0.050703213970635416,
    85: 0.06891551289604525,
    86: 0.005132173488011392,
    87: -0.02128605425522006,
    88: 0.02795454060882567,
    89: -0.05816830999206144,
    90: 0.027658584675920125,
    91: 0.0169675136614403,
    92: -0.14847062895095342,
    93: 0.0199896482085131,
    94: 0.0075104016378699096,
    95: -0.03788854663095413,
    96: 0.032363695335013536,
    97: -0.00782387230921992,
    98: 0.07726756030384677,
    99: -0.08983334156081789
})

output = []
for i in range(len(t[1].keys())):
    output.append(t[1][i])

data2 = np.array(output).reshape(64, 64, 64, 100)

import matplotlib.pyplot as plt


def show_slices(slices):
    """ Function to display row of image slices """
    fig, axes = plt.subplots(1, len(slices))
    for i, slice in enumerate(slices):
        axes[i].imshow(slice.T, cmap="gray", origin="lower")


show_slices([data[:, :, 32, 1], data[:, 32, :, 1], data[32, :, :, 1]])

#TODO: generate better input date.
